name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable

    - name: Extract version from Cargo.toml
      id: cargo_version
      run: echo "VERSION=$(grep '^version' Cargo.toml | head -1 | awk -F ' = ' '{ print $2 }' | tr -d '\"')" >> $GITHUB_ENV

    - name: Build
      run: cargo build --verbose --release

    - name: Run tests
      run: cargo test --verbose

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.2.1
      with:
        name: pyne 
        path: target/release
        if-no-files-found: error

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}
      with:
        tag_name: v${{ env.VERSION }}
        release_name: "Release v${{ env.VERSION }}"
        draft: false
        prerelease: false

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: target/release/pyne
        asset_name: pyne
        asset_content_type: application/octet-stream
